// Typography
// ---------------------------------------

// Setting root sizes and base styles.
html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;

  @include sassline-rootsize;
}

// Site-wide base styles.
body {
  font-family: unquote(map-get($sassline-bodytype, font-family));
  font-style: normal;
  font-weight: map-get($sassline-bodytype, regular);
  line-height: 2rem;

  @include sassline-fontsize(zeta, all);
}

// Links.
a {
  -webkit-transition: color .1s, background-color .1s;
  -moz-transition: color .1s, background-color .1s;
  -ms-transition: color .1s, background-color .1s;
  -o-transition: color .1s, background-color .1s;
  transition: color .1s, background-color .1s;

  color: $sassline-linkColour;
  text-decoration: none;

  &:hover, &:active, &:focus {
    color: $sassline-hoverColour;
    text-decoration: none;
  }
}

// Styles for typeset text.
.typeset {

  // Nice underlines for text links.
  p a, li a {
    background-image: -webkit-linear-gradient(top,rgba(0, 0, 0, 0) 50%,lighten($sassline-linkColour,20%) 50%);
    background-image: -moz-linear-gradient(top,rgba(0, 0, 0, 0) 50%,lighten($sassline-linkColour,20%) 50%);
    background-image: -o-linear-gradient(top,rgba(0, 0, 0, 0) 50%,lighten($sassline-linkColour,20%) 50%);
    background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0) 50%,lighten($sassline-linkColour,20%) 50%);
    background-position: 0 93%;
    background-repeat: repeat-x;
    background-size: 100% 0.15rem;
    text-shadow: 0.1rem 0 $sassline-backgroundColour,0.15rem 0 $sassline-backgroundColour,-0.1rem 0 $sassline-backgroundColour,-0.15rem 0 $sassline-backgroundColour;

    &:hover, &:active, &:focus {
      background-image: -webkit-linear-gradient(top,rgba(0, 0, 0, 0) 50%,lighten($sassline-hoverColour,20%) 50%);
      background-image: -moz-linear-gradient(top,rgba(0, 0, 0, 0) 50%,lighten($sassline-hoverColour,20%) 50%);
      background-image: -o-linear-gradient(top,rgba(0, 0, 0, 0) 50%,lighten($sassline-hoverColour,20%) 50%);
      background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0) 50%,lighten($sassline-hoverColour,20%) 50%);
    }
  }

  // Paragraphs. OpenType ligatures and oldstyle figures enabled if available.
  p {
    -webkit-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
    -moz-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
    -ms-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
    -o-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
    font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;

    @include sassline-baseline($sassline-fontsize: zeta, $sassline-font: $sassline-bodytype, $sassline-lineheight: 2, $sassline-below: 2, $sassline-breakpoint: all);
  }

  // Headings. OpenType ligatures, discretionary ligatures and lining figures enabled if available.
  h1, h2, h3, h4, h5, h6 {
    -webkit-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    -moz-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    -ms-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    -o-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;

    color: $sassline-headingColour;
    font-family: unquote(map-get($sassline-headingtype, font-family));
    font-style: normal;
    font-weight: map-get($sassline-headingtype, bold);
  }

  // Heading level 1.
  h1, .alpha {
    @include sassline($sassline-fontsize: alpha, $sassline-font: $sassline-headingtype, $sassline-lineheight: 3, $sassline-below: 1, $sassline-breakpoint: all);
  }

  // Heading level 2.
  h2, .beta {
    @include sassline(beta, $sassline-headingtype, 3, 1, all);
  }

  // Heading level 3.
  h3, .gamma {
    @include sassline(gamma, $sassline-headingtype, 3, 1, all);
  }

  // Heading level 4.
  h4, .delta {
    @include sassline(delta, $sassline-headingtype, 2, 0, all);
  }

  // Heading level 5.
  h5, .epsilon {
    @include sassline(epsilon, $sassline-headingtype, 2, 0, all);
  }

  // Heading level 6.
  h6, .zeta {
    @include sassline(zeta, $sassline-headingtype, 2, 0, all);
  }

  // Lists.
  ul, ol {
    @include sassline-baseline(zeta, $sassline-bodytype, 2, 2, all);

    li {
      -webkit-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      -moz-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      -ms-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      -o-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;

      margin-left: 2rem;

      @include sassline-breakpoint(break-1) {
        margin-left: 0;
      }

      ol, ul {
        padding-top: 1rem;
        margin-bottom: 1rem;
        margin-left: 2rem;
      }
    }
  }

  // Ordered lists.
  ol {
    list-style-type: none;

    li {
      counter-increment: top-level;

      &:before {
        -webkit-font-feature-settings: 'lnum' 1, 'tnum' 1;
        -moz-font-feature-settings: 'lnum' 1, 'tnum' 1;
        -ms-font-feature-settings: 'lnum' 1, 'tnum' 1;
        -o-font-feature-settings: 'lnum' 1, 'tnum' 1;
        font-feature-settings: 'lnum' 1, 'tnum' 1;

        content: counter(top-level) '.';
        margin-left: -3rem;
        position: absolute;
        text-align: right;
        width: 2em;
      }

      ul {

        li {

          &:before {
            content: '';
          }

          ol {

            li {
              counter-increment: alt-level;

              &:before {
                content: counter(alt-level) '.';
              }
            }
          }
        }
      }

      ol {

        li {
          counter-increment: sub-level;

          &:before {
            content: counter(top-level) '.' counter(sub-level);
          }

          ul {

            li {

              &:before {
                content: '';
              }
            }
          }

          ol {

            li {
              counter-increment: sub-sub-level;

              &:before {
                content: counter(top-level) '.' counter(sub-level) '.' counter(sub-sub-level);
              }
            }
          }
        }
      }
    }
  }

  // Definition lists.
  dl {
    @include sassline-baseline(zeta, $sassline-bodytype, 2, 2, all);

    dt, dd {
      -webkit-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      -moz-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      -ms-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      -o-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;

      margin-left: 2rem;

      @include sassline-breakpoint(break-1) {
        margin-left: 0;
      }
    }

    dt {
      font-weight: map-get($sassline-bodytype, bold);
    }

    dd + dt {
      padding-top: 1rem;
    }
  }

  // Tables.
  table {
    -webkit-font-feature-settings: 'liga' 1, 'lnum' 1, 'tnum' 1, 'kern' 1;
    -moz-font-feature-settings: 'liga' 1, 'lnum' 1, 'tnum' 1, 'kern' 1;
    -ms-font-feature-settings: 'liga' 1, 'lnum' 1, 'tnum' 1, 'kern' 1;
    -o-font-feature-settings: 'liga' 1, 'lnum' 1, 'tnum' 1, 'kern' 1;
    font-feature-settings: 'liga' 1, 'lnum' 1, 'tnum' 1, 'kern' 1;

    font-family: unquote(map-get($sassline-headingtype, font-family));
    font-style: normal;
    font-weight: map-get($sassline-headingtype, regular);
    width: 100%;

    @include sassline(eta, $sassline-headingtype, 2, 0, all);

    thead {

      th {
        @include sassline(zeta, $sassline-headingtype, 2, 0, all);
        padding-bottom: 1px;
      }
    }
  }

  // Bold.
  b, strong, .bold {
    font-weight: map-get($sassline-bodytype, bold);
  }

  // Italic.
  em, i, .italic {
    font-style: map-get($sassline-bodytype, italic);
  }

  // Caption and inline small text.
  small, .caption {
    font-family: unquote(map-get($sassline-headingtype, font-family));
    font-style: normal;
    font-weight: map-get($sassline-headingtype, regular);

    @include sassline-fontsize(theta, all);
  }

  small {
    line-height: 1rem;
  }

  .caption {
    color: $sassline-captionColour;

    @include sassline-baseline(theta, $sassline-headingtype, 2, 2, all);
  }

  // Nice spacing for captions.
  h1 + .caption, .alpha + .caption, h2 + .caption, .beta + .caption, h3 + .caption, .gamma + .caption {
    margin-top: -1rem;
  }

  .delta + .caption, .epsilon + .caption, .zeta + .caption {
    margin-top: 0rem;
  }

  // Quotes.
  blockquote {

    p {
      border-left: 0.15rem solid $sassline-linkColour;
      font-style: map-get($sassline-bodytype, italic);
      padding-left: 1rem;

      // Add spacing below blockquote paragraphs to align to baseline grid.
      $sassline-get-scale: map-get($sassline-modular-scale, scale-0);
      $sassline-get-size: map-get($sassline-get-scale, zeta);
      $sassline-rootsize: nth($sassline-sizes, 1);
      $sassline-baseline-shift: #{($sassline-get-size / 2 * ((2 * $sassline-rootsize / $sassline-get-size) - map-get($sassline-bodytype, cap-height))) / $sassline-rootsize + 0.00001};
      $sassline-baseline-push: #{3 - (($sassline-get-size * ((2 * $sassline-rootsize / $sassline-get-size) - map-get($sassline-bodytype, cap-height))) / $sassline-rootsize + 0.00001)};

      margin-bottom: #{$sassline-baseline-push}rem;
      padding-bottom: #{$sassline-baseline-shift}rem;

      @for $i from 2 through $sassline-breakpoints-limit {
        $sassline-get-scale: map-get($sassline-modular-scale, scale-#{$i - 1});
        $sassline-get-size: map-get($sassline-get-scale, zeta);
        $sassline-rootsize: nth($sassline-sizes, $i);
        $sassline-baseline-shift: #{($sassline-get-size / 2 * ((2 * $sassline-rootsize / $sassline-get-size) - map-get($sassline-bodytype, cap-height))) / $sassline-rootsize + 0.00001};
        $sassline-baseline-push: #{3 - (($sassline-get-size * ((2 * $sassline-rootsize / $sassline-get-size) - map-get($sassline-bodytype, cap-height))) / $sassline-rootsize + 0.00001)};

        @media screen and (min-width: nth($sassline-points, $i) / 16 * 1em ) {
          margin-bottom: #{$sassline-baseline-push}rem;
          padding-bottom: #{$sassline-baseline-shift}rem;
        }
      }
    }

    @include sassline-breakpoint(break-1) {
      margin-left: -1rem;
    }
  }

  // Horizontal rule.
  hr {
    background-image: -webkit-gradient(linear,left top,left bottom,from(rgba(0, 0, 0, 0)),to($sassline-captionColour));
    background-image: -webkit-linear-gradient(top,rgba(0, 0, 0, 0) 50%,$sassline-captionColour 50%);
    background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0) 50%,$sassline-captionColour 50%);
    background-position: 0 50%;
    background-repeat: repeat-x;
    background-size: 100% 0.15rem;
    border: 0;
    margin: 0;
    padding-bottom: 3rem;
    padding-top: 3rem;
  }

  // Code block.
  code, pre {
    background-color: $sassline-codeBackgroundColour;
    font-family: unquote(map-get($sassline-monospacetype, font-family));
  }

  pre {
    display: block;
    margin-bottom: 2rem;
    padding: 1rem;
    white-space: pre;
    white-space: pre-wrap;
    word-break: break-all;
    word-wrap: break-word;
  }

  code {
    line-height: 1rem;

    @include sassline-fontsize(theta, all);
  }

  // Letter space those capitals people, Jan Tschichold would be proud.
  .upper {
    letter-spacing: 0.1rem;
    text-transform: uppercase;
  }

  // Real small caps.
  .small-caps {
    -webkit-font-feature-settings: 'smcp' 1, 'kern' 1;
    -moz-font-feature-settings: 'smcp' 1, 'kern' 1;
    -ms-font-feature-settings: 'smcp' 1, 'kern' 1;
    -o-font-feature-settings: 'smcp' 1, 'kern' 1;
    font-feature-settings: 'smcp' 1, 'kern' 1;

    letter-spacing: 0.1rem;
  }

  // Consistent height numbers with OpenType.
  .lining-numerals {
    -webkit-font-feature-settings: 'lnum' 1, 'kern' 1;
    -moz-font-feature-settings: 'lnum' 1, 'kern' 1;
    -ms-font-feature-settings: 'lnum' 1, 'kern' 1;
    -o-font-feature-settings: 'lnum' 1, 'kern' 1;
    font-feature-settings: 'lnum' 1, 'kern' 1;
  }

  // Ascending and descending numbers with OpenType.
  .oldstyle-numerals {
    -webkit-font-feature-settings: 'onum' 1, 'kern' 1;
    -moz-font-feature-settings: 'onum' 1, 'kern' 1;
    -ms-font-feature-settings: 'onum' 1, 'kern' 1;
    -o-font-feature-settings: 'onum' 1, 'kern' 1;
    font-feature-settings: 'onum' 1, 'kern' 1;
  }
}
